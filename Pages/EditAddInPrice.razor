@page "/AddinPriceEdit/{addInId}"

@inject NavigationManager NavigationManager
@inject AddIn AddIn

<h1>Edit Add-Ins</h1>


@if (!_isSuccess && _message != "")
{
    <MudAlert Severity="Severity.Error">@_message</MudAlert>
}
else if (_isSuccess && _message != "")
{
    <MudAlert Severity="Severity.Success">@_message</MudAlert>
}

@if (_addInItem != null)
{
    @* <div class="container-fluid mt-5">
        <div class="row">
            <div class="col-6 d-flex flex-column gap-y-3">
                <MudTextField @bind-Value="_password" Label="Current Password" Variant="Variant.Outlined" InputType="@InputType.Password"></MudTextField>
                <MudTextField @bind-Value="_addInItem.Name" Label="Add-In Item Name" Variant="Variant.Outlined"></MudTextField>
                <MudTextField @bind-Value="_addInItem.Price" Label="Price" Variant="Variant.Outlined"></MudTextField>
                <div>
                    <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Class="mt-5" OnClick="updateAddIn">
                        Update 
                    </MudButton>
                    <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Class="mt-5" OnClick="@(()  => NavigationManager.NavigateTo("/addins"))" >
                        Back
                    </MudButton>
                </div>
            </div>
        </div>
    </div> *@

    <div class="container mt-5">
        <div class="row">
            <div class="col-lg-6 col-md-8 col-sm-10 mx-auto">
                <div class="card p-4">
                    <MudTextField @bind-Value="_password" Label="Current Password" Variant="Variant.Outlined" InputType="@InputType.Password" Class="mb-3"></MudTextField>
                    <MudTextField @bind-Value="_addInItem.Name" Label="Add-In Item Name" Variant="Variant.Outlined" Class="mb-3"></MudTextField>
                    <MudTextField @bind-Value="_addInItem.Price" Label="Price" Variant="Variant.Outlined" Class="mb-3"></MudTextField>

                    <div class="d-flex justify-content-between mt-4">
                        <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" OnClick="updateAddIn">
                            Update
                        </MudButton>

                        <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" OnClick="@(() => NavigationManager.NavigateTo("/AddinEdit"))">
                            Back
                        </MudButton>
                    </div>
                </div>
            </div>
        </div>
    </div>


}

@code {
    [Parameter]
    public string addInId { get; set; }

    [CascadingParameter]
    private GlobalState _globalState { get; set; }

    private string _message { get; set; } = "";
    private bool _isSuccess { get; set; } = false;

    private CoffeeAddIn _addInItem { get; set; } //This variable contains the details of the addins

    private string _password { get; set; }

    protected override void OnInitialized()
    {
        _addInItem = AddIn.GetAddInItemByID(addInId);
    }
    protected void updateAddIn()
    {
        try
        {
            if (String.IsNullOrEmpty(_password))//in case password is empty
            {
                _message = "Please Enter Password";
                return;
            }
            if (String.IsNullOrEmpty(_addInItem.Name))//incase there is no add in name
            {
                _message = "Please Enter Name";
                return;
            }
            if (_addInItem.Price <= 0)//incase price is set to 0
            {
                _message = "Please Enter Valid Price";
                return;
            }
            if (_password != _globalState.CurrentUser.Password)//in case password is incorrect
            {
                _message = "Please Provide Correct password";
                return;
            }
            AddIn.UpdateAddIn(_addInItem);//calls updateAddins method
            _message = "Successfully Updated!";
            _isSuccess = true;
            NavigationManager.NavigateTo("/AddinEdit");
        }
        catch (Exception e)
        {
            _message = e.Message;
        }
    }
    
}
