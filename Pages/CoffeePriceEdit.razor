@page "/CoffeePriceEdit/{coffeeId}"

@inject NavigationManager NavigationManager
@inject CoffeeConfig CoffeeConfig

<h1>Edit Add-Ins</h1>

<MudButton OnClick="@(()  => NavigationManager.NavigateTo("/CoffeeEdit"))">Back</MudButton>

@if (!_isSuccess && _message != "")
{
    <MudAlert Severity="Severity.Error">@_message</MudAlert>
}
else if (_isSuccess && _message != "")
{
    <MudAlert Severity="Severity.Success">@_message</MudAlert>
}

@if (_coffeeItem != null)
{
    <div class="container-fluid mt-5">
        <div class="row">
            <div class="col-6 d-flex flex-column gap-y-3">
                <MudTextField @bind-Value="_password" Label="Current Password" Variant="Variant.Outlined" InputType="@InputType.Password"></MudTextField>
                <MudTextField @bind-Value="_coffeeItem.CoffeeName" Label="Add-In Item Name" Variant="Variant.Outlined"></MudTextField>
                <MudTextField @bind-Value="_coffeeItem.Price" Label="Price" Variant="Variant.Outlined"></MudTextField>
                <div>
                    <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Class="mt-5" OnClick="updateCoffeeItem">
                        Update Coffee Item
                    </MudButton>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string coffeeId { get; set; }

    [CascadingParameter]
    private GlobalState _globalState { get; set; }

    private string _message { get; set; } = "";
    private bool _isSuccess { get; set; } = false;

    private Coffee _coffeeItem { get; set; } //This variable contains the details of the addins

    private string _password { get; set; }

    protected override void OnInitialized()
    {
        _coffeeItem = CoffeeConfig.GetCofeeByID(coffeeId);
    }
    protected void updateCoffeeItem()
    {
        try
        {
            if (String.IsNullOrEmpty(_password))
            {
                _message = "Please Enter Password";
                return;
            }
            if (String.IsNullOrEmpty(_coffeeItem.CoffeeName))
            {
                _message = "Please Enter Name";
                return;
            }
            if (_coffeeItem.Price <= 0)
            {
                _message = "Please Enter Valid Price";
                return;
            }
            if (_password != _globalState.CurrentUser.Password)
            {
                _message = "Please Provide Correct password";
                return;
            }
            CoffeeConfig.UpdateCofeeDetails(_coffeeItem);
            _message = "Successfully Updated!";
            _isSuccess = true;
            NavigationManager.NavigateTo("/coffeelist");
        }
        catch (Exception e)
        {
            _message = e.Message;
        }
    }
}

